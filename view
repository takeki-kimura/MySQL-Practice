# viewとは

  ・データそのものを保存するのではなく、データを取り出すSELECT文だけを保存する
  ・データベースユーザーの利便性を高める道具
  ・SQLの観点から見ると、テーブルと同じもの
  ・viewを使うと、必要な複数のテーブルにまたがる場合などの複雑な集約を行いやすくなる
  ・よく使うselect文はviewにして使い回すことができる

# viewとテーブル

  • テーブルとviewの違い
  ・テーブル
    - テーブルは実際のデータを保存する
  
  ・view
    - viewの中にはselect文が保存される
    - viewー自体はデータを持たない

# viewの制限

  • viewに対する更新は不可能ではないが制限がある
  • 更新系(insert, delete, update)に制約がある
  ・いくつかの条件を満たす場合のみ、viewに対する更新が可能
    1.select句にdistinctが含まれていない
    2.from句に含まれるテーブルが一つだけ
    3.group by句を使用していない
    4.having句を使用していない

    ※ viewとテーブルんも更新は連動して行われるため、集約されたviewは更新不可

# viewのメリット

  ・データを保存しないので記憶装置の容量を節約できる
  ・よく使うselect文をviewにしておくことで使い回しができる

# viewのデメリット

  ・パフォーマンス低下を招く場合がある

# viewの作成
  ・構文
   - create view view名 (<viewの列名1>,<viewの列名2>, … ) 
   - as
   - <select文>

  ・例)
    1.都道府県別のユーザーを取得する (select文をviewにする)
     - create view prefecture_user_counts(name,count)
     - as
     - select
     -   p.name name,
     -   count(*) count
     - from
     -   users u
     - inner join
     -   prefectures p
     -   on u.prefecture_id = p.id
     -  group by 
     -   u.prefecture_id;

    2.上記で作成したviewを使用してデータを取得する
     - select
     -   name,
     -   count
     - from
     -   prefecture_user_counts;

# viewの削除
  ・構文
   - drop view view名
  
  ・例）
   - drop view prefecture_user_counts;