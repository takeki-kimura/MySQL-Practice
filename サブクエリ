# サブクエリとは
  ・ある問い合わせの結果に基づいて、異なる問い合わせを行う仕組み
  ・複雑な問い合わせができる
  ・where句の中で使う事が多い
  ・where句以外にも、select句、from句、having句など様々な場所で利用できる

# サブクエリを使うと
  ・日々の業務改善のデータ分析に役立つデータが、データベースから直接SQLで取り出せる
  ・例）
   - 全商品の平均単価より、高い商品を取得
   - 商品別の平均販売数よりも、多く売れている日を取得
   - 商品カテゴリごとに、平均単価を取得
   - 2017年12月に、商品を購入して"いない"、ユーザーを取得

# サブクエリ(where句)
  ・構文
   - select
   -   列名, ...
   - from
   -   テーブル名
   - where
   -   列名 演算子 ( select 列名 from テーブル名2 ... );
  
  ・例）
    1.2017年12月に商品を購入していないユーザーの一覧を取得 (必要な情報はユーザーid、名字、email)
      ※ ポイント - サブクエリとnot in演算子を利用する
     - select
     -   id,
     -   last_name,
     -   email
     - from
     -   users
     - where id not in(
     -   select
     -     user_id
     -   from
     -     orders
     -   where
     -     order_time >= '2017-12-01 00:00:00'
     -     and order_time < '2018-01-01 00:00:00');

    2.2017年12月に商品を購入したユーザーの一覧を取得 (必要な情報はユーザー、id名字、mail)
     - select
     -   id,
     -   last_name,
     -   email
     - from
     -   users
     - where id in( 
     -   select
     -     user_id
     -   from
     -     orders
     -   where
     -     order_time >= '2017-12-01 00:00:00'
     -     and order_time < '2018-01-01 00:00:00');

# スカラ・サブクエリ
  • スカラ・サブクエリ
  ・必ず1行1列だけの戻り値を返すサブクエリのこと

  • 補足
  ・スカラとは単一のという意味
  ・絶対にサブクエリが複数行を返さないようにする

  • 応用例
  ・全商品の平均単価より、高い商品を取得 (商品単価の高い順に並び替え、商品単価が同じ時は登録順(id昇順)に並べ替える)
    ※ ポイント スカラ・サブクエリを使う
   - select
   -   * 
   - from
   -   products
   - where 
   -   price > 
   -     (
   -       select 
   -         avg(price)
   -       from
   -         products
   -     )
   - order by
   -   price desc, id asc;
